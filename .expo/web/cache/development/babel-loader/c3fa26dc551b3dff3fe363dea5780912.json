{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/appdevmacbook10/Desktop/rhydhur/Rhymes/src/components/threeLetters/ThreeLetters.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useContext } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport DataContext from \"../../state_manager/manager\";\nimport styles from \"./styles\";\nimport dataProvider from \"../../provider/dataProvider\";\n\nvar ThreeLetters = function ThreeLetters(_ref) {\n  var navigation = _ref.navigation,\n      position = _ref.position;\n\n  var _useContext = useContext(DataContext),\n      stopBackgroundMusic = _useContext.stopBackgroundMusic,\n      goRhymePage = _useContext.goRhymePage;\n\n  function rhymeScreen(row, column) {\n    return _regeneratorRuntime.async(function rhymeScreen$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(stopBackgroundMusic());\n\n          case 2:\n            goRhymePage(navigation, row, column);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var length = position === 8 ? [0, 1] : [0, 1, 2];\n  var info = length.map(function (data) {\n    return React.createElement(TouchableOpacity, {\n      activeOpacity: 0.7,\n      key: \"\" + position + data,\n      onPress: function onPress() {\n        return rhymeScreen(position, data);\n      },\n      style: [styles.letterBlock, {\n        backgroundColor: dataProvider.letterRows[position].colors[data]\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }, React.createElement(Image, {\n      source: dataProvider.letterRows[position].ImageUrl[data],\n      style: styles.blockText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }));\n  });\n  return React.createElement(View, {\n    style: styles.lettersSubcontainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, info);\n};\n\nexport default ThreeLetters;","map":{"version":3,"sources":["/Users/appdevmacbook10/Desktop/rhydhur/Rhymes/src/components/threeLetters/ThreeLetters.js"],"names":["React","useContext","DataContext","styles","dataProvider","ThreeLetters","navigation","position","stopBackgroundMusic","goRhymePage","rhymeScreen","row","column","length","info","map","data","letterBlock","backgroundColor","letterRows","colors","ImageUrl","blockText","lettersSubcontainer"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;;;;AAEA,OAAOC,WAAP;AACA,OAAOC,MAAP;AACA,OAAOC,YAAP;;AAGA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAA8B;AAAA,MAA3BC,UAA2B,QAA3BA,UAA2B;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAE/C,oBAA2CN,UAAU,CAACC,WAAD,CAArD;AAAA,MAAOM,mBAAP,eAAOA,mBAAP;AAAA,MAA4BC,WAA5B,eAA4BA,WAA5B;;AAEA,WAAeC,WAAf,CAA2BC,GAA3B,EAAgCC,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACUJ,mBAAmB,EAD7B;;AAAA;AAEIC,YAAAA,WAAW,CAACH,UAAD,EAAaK,GAAb,EAAkBC,MAAlB,CAAX;;AAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKA,MAAIC,MAAM,GAAGN,QAAQ,KAAK,CAAb,GAAiB,CAAC,CAAD,EAAI,CAAJ,CAAjB,GAA0B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAvC;AACA,MAAIO,IAAI,GAAGD,MAAM,CAACE,GAAP,CAAW,UAAAC,IAAI,EAAI;AAE1B,WACI,oBAAC,gBAAD;AACI,MAAA,aAAa,EAAG,GADpB;AAEI,MAAA,GAAG,OAAKT,QAAL,GAAgBS,IAFvB;AAGI,MAAA,OAAO,EAAE;AAAA,eAAMN,WAAW,CAACH,QAAD,EAAWS,IAAX,CAAjB;AAAA,OAHb;AAII,MAAA,KAAK,EAAE,CAACb,MAAM,CAACc,WAAR,EAAqB;AAACC,QAAAA,eAAe,EAAEd,YAAY,CAACe,UAAb,CAAwBZ,QAAxB,EAAkCa,MAAlC,CAAyCJ,IAAzC;AAAlB,OAArB,CAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKI,oBAAC,KAAD;AACI,MAAA,MAAM,EAAEZ,YAAY,CAACe,UAAb,CAAwBZ,QAAxB,EAAkCc,QAAlC,CAA2CL,IAA3C,CADZ;AAEI,MAAA,KAAK,EAAEb,MAAM,CAACmB,SAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CADJ;AAYH,GAdU,CAAX;AAgBA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEnB,MAAM,CAACoB,mBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKT,IADL,CADJ;AAKH,CA/BD;;AAiCA,eAAeT,YAAf","sourcesContent":["import React, {useContext} from 'react'\nimport { TouchableOpacity, Image, View } from \"react-native\";\nimport DataContext from '../../state_manager/manager'\nimport styles from './styles'\nimport dataProvider from '../../provider/dataProvider'\n\n\nconst ThreeLetters = ({ navigation, position }) => {\n\n    const {stopBackgroundMusic, goRhymePage} = useContext(DataContext)\n\n    async function rhymeScreen(row, column){\n        await stopBackgroundMusic()\n        goRhymePage(navigation, row, column)\n    }\n    \n    let length = position === 8 ? [0, 1] : [0, 1, 2]\n    let info = length.map(data => {\n       \n        return(\n            <TouchableOpacity \n                activeOpacity= {0.7}\n                key={`${position}${data}`}\n                onPress={() => rhymeScreen(position, data)}\n                style={[styles.letterBlock, {backgroundColor: dataProvider.letterRows[position].colors[data]}]}>\n                <Image \n                    source={dataProvider.letterRows[position].ImageUrl[data]}\n                    style={styles.blockText}\n                />\n            </TouchableOpacity>\n        )\n    })\n    \n    return(\n        <View style={styles.lettersSubcontainer}>\n            {info}\n        </View>\n    )\n}\n\nexport default ThreeLetters"]},"metadata":{},"sourceType":"module"}